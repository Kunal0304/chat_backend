{"version":3,"sources":["Context/ChatProvider.js","components/Authentication/Login.js","components/Authentication/Signup.js","Pages/Homepage.js","components/SingleChat.js","config/ChatLogics.js","components/ScrollableChat.js","components/Chatbox.js","components/ChatLoading.js","components/MyChats.js","components/miscellaneous/ProfileModal.js","components/userAvatar/UserListItem.js","components/miscellaneous/SideDrawer.js","Pages/Chatpage.js","App.js","reportWebVitals.js","index.js"],"names":["ChatContext","createContext","ChatState","useContext","ChatProvider","children","useState","selectedChat","setSelectedChat","user","setUser","notification","setNotification","chats","setChats","history","useHistory","useEffect","userInfo","JSON","parse","localStorage","getItem","push","Provider","value","Login","show","setShow","toast","useToast","email","setEmail","password","setPassword","loading","setLoading","loginErrorStatus","setLoginErrorStatus","loginError","setLoginError","isValidEmail","undefined","test","submitHandler","a","errors","trim","field","message","length","config","headers","axios","post","data","title","status","duration","isClosable","position","setItem","stringify","description","response","spacing","id","isRequired","type","placeholder","onChange","e","target","map","error","style","color","size","width","h","onClick","colorScheme","marginTop","isLoading","variant","Signup","handleButtonClick","handleClick","name","setName","mobile","setMobile","gender","setGender","confirmpassword","setConfirmpassword","picLoading","setPicLoading","registerErrorStatus","setRegisterErrorStatus","registerError","setRegisterError","phone","match","align","Homepage","socket","selectedChatCompare","activeTab","setActiveTab","maxW","centerContent","d","justifyContent","p","bg","w","m","borderRadius","borderWidth","fontSize","fontFamily","isFitted","index","mb","isSameSender","messages","userId","sender","isLastMessage","i","ScrollableChat","isSameSenderMargin","isSameUser","isUserMessage","senderId","_id","display","label","placement","hasArrow","mt","ml","mr","cursor","src","pic","backgroundColor","marginLeft","padding","maxWidth","SingleChat","fetchAgain","setFetchAgain","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","fetchMessages","Authorization","token","get","emit","sendMessage","event","key","io","on","newMessageRecieved","includes","base","md","pb","px","alignItems","icon","ArrowBack","flexDir","overflowY","alignSelf","margin","className","onKeyDown","options","marginBottom","lastTypingTime","Date","getTime","setTimeout","Chatbox","ChatLoading","height","MyChats","fetchChats","chat","py","latestMessage","content","substring","ProfileModal","useDisclosure","isOpen","onOpen","onClose","View","isCentered","boxSize","alt","UserListItem","handleFunction","_hover","background","SideDrawer","search","setSearch","searchResult","setSearchResult","loadingChat","setLoadingChat","handleSearch","accessChat","as","Button","rightIcon","ChevronDown","removeItem","borderBottomWidth","Chatpage","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61be2f49.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ChatContext = createContext();\n\nconst ChatProvider = ({ children }) => {\n  const [selectedChat, setSelectedChat] = useState();\n  const [user, setUser] = useState();\n  const [notification, setNotification] = useState([]);\n  const [chats, setChats] = useState();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUser(userInfo);\n\n    if (!userInfo) history.push(\"/\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [history]);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        selectedChat,\n        setSelectedChat,\n        user,\n        setUser,\n        notification,\n        setNotification,\n        chats,\n        setChats,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatState = () => {\n  return useContext(ChatContext);\n};\n\nexport default ChatProvider;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nconst Login = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [loginErrorStatus, setLoginErrorStatus] = useState(false);\n  const [loginError, setLoginError] = useState([]);\n\n\n  const history = useHistory();\n  const { setUser } = ChatState();\n\n  function isValidEmail(email) {\n    if (email !== undefined) {\n      if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      return true;\n    }\n  }\n\n  const submitHandler = async () => {\n    const errors = []\n    // Validate Email\n    if (!email.trim()) {\n      errors.push({ field: 'email', message: 'Please enter your email' });\n    } else if (!isValidEmail(email)) {\n      errors.push({ field: 'email', message: 'Email ID is not valid' });\n    }\n\n    // Validate Password\n    if (!password.trim()) {\n      errors.push({ field: 'password', message: 'Please enter your password' });\n    } else if (password.length < 6) {\n      errors.push({ field: 'password', message: 'Password must be at least 6 characters long' });\n    }\n\n        // Check if there are any errors\n        if (errors.length > 0) {\n          setLoginErrorStatus(true);\n          setLoginError(errors);\n          return false;\n        } else {\n          setLoginErrorStatus(false)\n        }\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/user/login\",\n        { email, password },\n        config\n      );\n\n      toast({\n        title: \"Login Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setUser(data);\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setLoading(false);\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <VStack spacing=\"10px\">\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          value={email}\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n                <div>\n          {loginErrorStatus && loginError.map(error => (\n            <>\n              {error.field === \"email\" && <p key={error.field} style={{ color: \"red\" }}>{error.message}</p>}\n            </>\n          ))}\n        </div>\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter password\"\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n        <div>\n            {loginErrorStatus && loginError.map(error => (\n              <>\n                {error.field === \"password\" && <p key={error.field} style={{ color: \"red\" }}>{error.message}</p>}\n              </>\n            ))}\n          </div>\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={loading}\n      >\n        Login\n      </Button>\n      <Button\n        variant=\"solid\"\n        colorScheme=\"red\"\n        width=\"100%\"\n        onClick={() => {\n          setEmail(\"kunal123@gmail.com\");\n          setPassword(\"123456\");\n        }}\n      >\n        Get Guest User Credentials\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Login;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { Radio, RadioGroup, HStack } from \"@chakra-ui/react\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\n\nconst Signup = ({handleButtonClick}) => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [mobile, setMobile] = useState(\"\");\n  const [gender, setGender] = useState(\"\"); // Updated state for gender\n  const [confirmpassword, setConfirmpassword] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [picLoading, setPicLoading] = useState(false);\n  const [registerErrorStatus, setRegisterErrorStatus] = useState(false);\n  const [registerError, setRegisterError] = useState([]);\n\n  function isValidEmail(email) {\n    if (email !== undefined) {\n      if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      return true;\n    }\n  }\n\n  function isValidPhone(phone) {\n    if (phone !== undefined) {\n        if (phone?.length > 10) {\n            return false;\n        }\n        if (!(phone?.match('[0-9]{10}'))) {\n            return false;\n        } else {\n            return true;\n        }\n    } else {\n        return true;\n    }\n}\n\n  const submitHandler = async () => {\n\n    const errors = [];\n\n    // Validate Name\n    if (!name?.trim()) {\n      errors.push({ field: 'name', message: 'Please enter your name' });\n    }\n\n    // Validate Email\n    if (!email.trim()) {\n      errors.push({ field: 'email', message: 'Please enter your email' });\n    } else if (!isValidEmail(email)) {\n      errors.push({ field: 'email', message: 'Email ID is not valid' });\n    }\n\n    // Validate Password\n    if (!password.trim()) {\n      errors.push({ field: 'password', message: 'Please enter your password' });\n    } else if (password.length < 6) {\n      errors.push({ field: 'password', message: 'Password must be at least 6 characters long' });\n    }\n\n    // Validate Confirm Password\n    if (!confirmpassword.trim()) {\n      errors.push({ field: 'confirmpassword', message: 'Please confirm your password' });\n    } else if (confirmpassword !== password) {\n      errors.push({ field: 'confirmpassword', message: 'Passwords do not match' });\n    }\n\n    // Validate Mobile Number\n    if (!mobile.trim()) {\n      errors.push({ field: 'mobile', message: 'Please enter phone number' });\n  } else if (!isValidPhone(mobile)) {\n      errors.push({ field: 'mobile', message: 'Phone number is not valid!' });\n  }\n\n    // Validate Gender\n    if (!gender) {\n      errors.push({ field: 'gender', message: 'Please select your gender' });\n    }\n\n    // Check if there are any errors\n    if (errors.length > 0) {\n      setRegisterErrorStatus(true);\n      setRegisterError(errors);\n      return false;\n    } else {\n      setRegisterErrorStatus(false)\n    }\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(\n        \"/api/user\",\n        {\n          name,\n          email,\n          password,\n          mobile,\n          gender\n        },\n        config\n      );\n      toast({\n        title: \"Registration Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setPicLoading(false);\n      handleButtonClick()\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n    }\n  };\n\n  return (\n    <VStack spacing=\"5px\">\n      <FormControl id=\"first-name\" isRequired>\n        <FormLabel>Name</FormLabel>\n        <Input\n          placeholder=\"Enter Your Name\"\n          onChange={(e) => setName(e.target.value || \"\")}\n        />\n        <div>\n          {registerErrorStatus && registerError.map(error => (\n            <>\n              {error.field === \"name\" && <p key={error.field} style={{ color: \"red\" }}>{error.message}</p>}\n            </>\n          ))}\n        </div>\n      </FormControl>\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value || \"\")}\n        />\n        <div>\n          {registerErrorStatus && registerError.map(error => (\n            <>\n              {error.field === \"email\" && <p key={error.field} style={{ color: \"red\" }}>{error.message}</p>}\n            </>\n          ))}\n        </div>\n      </FormControl>\n      <FormControl id=\"mobile\" isRequired>\n        <FormLabel>Mobile Number</FormLabel>\n        <Input\n          type=\"tel\"\n          placeholder=\"Enter Your Mobile Number\"\n          onChange={(e) => setMobile(e.target.value || \"\")}\n        />\n        <div>\n          {registerErrorStatus && registerError.map(error => (\n            <>\n              {error.field === \"mobile\" && <p key={error.field} style={{ color: \"red\" }}>{error.message}</p>}\n            </>\n          ))}\n        </div>\n      </FormControl>\n      <FormControl id=\"gender\" isRequired>\n        <FormLabel>Gender</FormLabel>\n        <VStack align=\"start\" spacing=\"1\">\n          <RadioGroup onChange={setGender} value={gender}>\n            <HStack spacing=\"24px\">\n              <Radio value=\"male\">Male</Radio>\n              <Radio value=\"female\">Female</Radio>\n              <Radio value=\"other\">Other</Radio>\n            </HStack>\n          </RadioGroup>\n        </VStack>\n        <div>\n          {registerErrorStatus && registerError.map(error => (\n            <>\n              {error.field === \"gender\" && <p key={error.field} style={{ color: \"red\" }}>{error.message}</p>}\n            </>\n          ))}\n        </div>\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter Password\"\n            onChange={(e) => setPassword(e.target.value || \"\")}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n          <div>\n            {registerErrorStatus && registerError.map(error => (\n              <>\n                {error.field === \"password\" && <p key={error.field} style={{ color: \"red\" }}>{error.message}</p>}\n              </>\n            ))}\n          </div>\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Confirm Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Confirm password\"\n            onChange={(e) => setConfirmpassword(e.target.value || \"\")}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n          <div>\n            {registerErrorStatus && registerError.map(error => (\n              <>\n                {error.field === \"confirmpassword\" && <p key={error.field} style={{ color: \"red\" }}>{error.message}</p>}\n              </>\n            ))}\n          </div>\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={picLoading}\n      >\n        Sign Up\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Signup;\n","import {\n  Box,\n  Container,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Login from \"../components/Authentication/Login\";\nimport Signup from \"../components/Authentication/Signup\";\n\nfunction Homepage() {\n  const history = useHistory();\n  const [activeTab, setActiveTab] = useState(0);\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n    if (user) history.push(\"/chats\");\n  }, [history]);\n\n  const handleButtonClick = () => {\n    setActiveTab(0); // Set the index of the login tab\n  };\n\n  return (\n    <Container maxW=\"xl\" centerContent>\n      <Box\n        d=\"flex\"\n        justifyContent=\"center\"\n        p={3}\n        bg=\"white\"\n        w=\"100%\"\n        m=\"40px 0 15px 0\"\n        borderRadius=\"lg\"\n        borderWidth=\"1px\"\n      >\n        <Text fontSize=\"4xl\" fontFamily=\"Work sans\">\n          Talk-A-Tive\n        </Text>\n      </Box>\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\n        <Tabs isFitted variant=\"soft-rounded\" index={activeTab}>\n          <TabList mb=\"1em\">\n            <Tab onClick={() => setActiveTab(0)}>Login</Tab>\n            <Tab onClick={() => setActiveTab(1)}>Sign Up</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel>\n              <Login />\n            </TabPanel>\n            <TabPanel>\n              <Signup handleButtonClick={handleButtonClick} />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Homepage;\n","import { FormControl } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../animations/typing.json\";\n\nimport io from \"socket.io-client\";\nimport { ChatState } from \"../Context/ChatProvider\";\nconst ENDPOINT = \"http://localhost:5000\";\nvar socket, selectedChatCompare;\n\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\n    ChatState();\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      setLoading(true);\n      const { data } = await axios.get(\n        `/api/chat/${user._id}/${selectedChat.id}`,\n        config\n      );\n      setMessages(data);\n      setLoading(false);\n\n      socket.emit(\"join chat\", selectedChat.id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  const sendMessage = async (event) => {\n    if (event.key === \"Enter\" && newMessage) {\n      socket.emit(\"stop typing\", selectedChat.id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        const { data } = await axios.post(\n          \"/api/send-message\",{\n            \"senderId\": user._id,\n            \"receiverId\": selectedChat.id,\n            \"message\": newMessage\n          },\n          config\n        );\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    fetchMessages();\n\n    selectedChatCompare = selectedChat;\n    // eslint-disable-next-line\n  }, [selectedChat]);\n\n  useEffect(() => {\n    socket.on(\"message recieved\", (newMessageRecieved) => {\n      if (\n        !selectedChatCompare ||\n        selectedChatCompare.id !== newMessageRecieved.senderId\n      ) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat.id);\n    }\n    \n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat.id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  return (\n    <>\n      {selectedChat ? (\n        <>\n          <Text\n            fontSize={{ base: \"28px\", md: \"30px\" }}\n            pb={3}\n            px={2}\n            w=\"100%\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent={{ base: \"space-between\" }}\n            alignItems=\"center\"\n          >\n            <IconButton\n              d={{ base: \"flex\", md: \"none\" }}\n              icon={<ArrowBackIcon />}\n              onClick={() => setSelectedChat(\"\")}\n            />\n          </Text>\n          <Box\n            d=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"flex-end\"\n            p={3}\n            bg=\"#E8E8E8\"\n            w=\"100%\"\n            h=\"100%\"\n            borderRadius=\"lg\"\n            overflowY=\"hidden\"\n          >\n            {loading ? (\n              <Spinner\n                size=\"xl\"\n                w={20}\n                h={20}\n                alignSelf=\"center\"\n                margin=\"auto\"\n              />\n            ) : (\n              <div className=\"messages\">\n                <ScrollableChat messages={messages} />\n              </div>\n            )}\n\n            <FormControl\n              onKeyDown={sendMessage}\n              id=\"first-name\"\n              isRequired\n              mt={3}\n            >\n              {istyping ? (\n                <div>\n                  <Lottie\n                    options={defaultOptions}\n                    // height={50}\n                    width={70}\n                    style={{ marginBottom: 15, marginLeft: 0 }}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n              <Input\n                variant=\"filled\"\n                bg=\"#E0E0E0\"\n                placeholder=\"Enter a message..\"\n                value={newMessage}\n                onChange={typingHandler}\n              />\n            </FormControl>\n          </Box>\n        </>\n      ) : (\n        // to get socket.io on same page\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\n            Click on a user to start chatting\n          </Text>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SingleChat;\n","\n    \n    export const isSameSender = (messages, message, index, userId) => {\n      if (index > 0 && messages[index - 1].sender?.id === userId) {\n        return true;\n      }\n      return false;\n    };\n\n    export const isLastMessage = (messages, i, userId) => {\n\n      return (\n        i === messages.length - 1 &&\n        messages[i].sender &&\n        messages[i].sender?.id !== userId\n      );\n    };\n\n","\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport {\n  isLastMessage,\n  isSameSender,\n} from \"../config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst ScrollableChat = ({ messages }) => {\n  const { user } = ChatState();\n\n  const isSameSenderMargin = (messages, message, index, userId) => {\n    if (index > 0 && isSameSender(messages, message, index - 1, userId)) {\n      return \"0px\";\n    }\n    return \"15px\"; // Adjust the margin as needed\n  };\n\n  const isSameUser = (messages, message, index, userId) => {\n    if (index > 0 && isSameSender(messages, message, index - 1, userId)) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <ScrollableFeed>\n      {messages &&\n        messages.map((m, i) => {\n          const isUserMessage = m.senderId === user._id;\n\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: isUserMessage ? \"flex-end\" : \"flex-start\",\n              }}\n              key={m.id}\n            >\n              {(isSameSender(messages, m, i, user._id) ||\n                isLastMessage(messages, i, user._id)) && (\n                <Tooltip\n                  label={m.sender?.name}\n                  placement={isUserMessage ? \"bottom-end\" : \"bottom-start\"}\n                  hasArrow\n                >\n                  <Avatar\n                    mt=\"7px\"\n                    ml={1}\n                    mr={1}\n                    size=\"sm\"\n                    cursor=\"pointer\"\n                    name={m.sender?.name}\n                    src={m.sender?.pic}\n                  />\n                </Tooltip>\n              )}\n              <span\n                style={{\n                  backgroundColor: `${\n                    isUserMessage ? \"#BEE3F8\" : \"#B9F5D0\"\n                  }`,\n                  marginLeft: isSameSenderMargin(messages, m, i, user._id),\n                  marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n                  borderRadius: \"20px\",\n                  padding: \"5px 15px\",\n                  maxWidth: \"75%\",\n                }}\n              >\n                {m.message}\n              </span>\n            </div>\n          );\n        })}\n    </ScrollableFeed>\n  );\n};\n\nexport default ScrollableChat;\n\n","import { Box } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport SingleChat from \"./SingleChat\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\n  const { selectedChat } = ChatState();\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\n      alignItems=\"center\"\n      flexDir=\"column\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"68%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n    </Box>\n  );\n};\n\nexport default Chatbox;\n","import { Stack } from \"@chakra-ui/layout\";\nimport { Skeleton } from \"@chakra-ui/skeleton\";\n\nconst ChatLoading = () => {\n  return (\n    <Stack>\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n    </Stack>\n  );\n};\n\nexport default ChatLoading;\n","import { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport ChatLoading from \"./ChatLoading\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst MyChats = ({ fetchAgain }) => {\n\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\n\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/chat/user/${user._id}`, config);\n\n      setChats(data);\n\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchChats();\n    // eslint-disable-next-line\n  }, [fetchAgain]);\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\n      flexDir=\"column\"\n      alignItems=\"center\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"31%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <Box\n        pb={3}\n        px={3}\n        fontSize={{ base: \"28px\", md: \"30px\" }}\n        fontFamily=\"Work sans\"\n        d=\"flex\"\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        My Chats\n      </Box>\n      <Box\n        d=\"flex\"\n        flexDir=\"column\"\n        p={3}\n        bg=\"#F8F8F8\"\n        w=\"100%\"\n        h=\"100%\"\n        borderRadius=\"lg\"\n        overflowY=\"hidden\"\n      >\n        {chats ? (\n          <Stack overflowY=\"scroll\">\n            {chats.map((chat) => (\n              <Box\n                onClick={() => setSelectedChat(chat)}\n                cursor=\"pointer\"\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\n                color={selectedChat === chat ? \"white\" : \"black\"}\n                px={3}\n                py={2}\n                borderRadius=\"lg\"\n                key={chat._id}\n              >\n                <Text>\n                { chat.name }\n                </Text>\n                {chat.latestMessage && (\n                  <Text fontSize=\"xs\">\n                    <b>{chat.latestMessage.sender.name} : </b>\n                    {chat.latestMessage.content.length > 50\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\n                      : chat.latestMessage.content}\n                  </Text>\n                )}\n              </Box>\n            ))}\n          </Stack>\n        ) : (\n          <ChatLoading />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyChats;\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  IconButton,\n  Text,\n  Image,\n} from \"@chakra-ui/react\";\n\nconst ProfileModal = ({ user, children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      {children ? (\n        <span onClick={onOpen}>{children}</span>\n      ) : (\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n      )}\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent h=\"410px\">\n          <ModalHeader\n            fontSize=\"40px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {user.name}\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody\n            d=\"flex\"\n            flexDir=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Image\n              borderRadius=\"full\"\n              boxSize=\"150px\"\n              src={user.pic}\n              alt={user.name}\n            />\n            <Text\n              fontSize={{ base: \"28px\", md: \"30px\" }}\n              fontFamily=\"Work sans\"\n            >\n              Email: {user.email}\n            </Text>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={onClose}>Close</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProfileModal;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Box, Text } from \"@chakra-ui/layout\";\n\nconst UserListItem = ({ handleFunction, user }) => {\n\n  return (\n    <Box\n      onClick={handleFunction}\n      cursor=\"pointer\"\n      bg=\"#E8E8E8\"\n      _hover={{\n        background: \"#38B2AC\",\n        color: \"white\",\n      }}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      color=\"black\"\n      px={3}\n      py={2}\n      mb={2}\n      borderRadius=\"lg\"\n    >\n      <Avatar\n        mr={2}\n        size=\"sm\"\n        cursor=\"pointer\"\n        name={user.name}\n        src={user.pic}\n      />\n      <Box>\n        <Text>{user.name}</Text>\n        <Text fontSize=\"xs\">\n          <b>Email : </b>\n          {user.email}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserListItem;\n","import { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport ChatLoading from \"../ChatLoading\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport ProfileModal from \"./ProfileModal\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nfunction SideDrawer() {\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n\n  const {\n    setSelectedChat,\n    user,\n    setChats,\n  } = ChatState();\n\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const history = useHistory();\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    history.push(\"/\");\n  };\n\n  const handleSearch = async () => {\n    if (!search) {\n      toast({\n        title: \"Please Enter something in search\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-left\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const accessChat = async (userId) => {\n\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\n\n      setSelectedChat(data);\n\n      const response = await axios.get(`/api/chat/user/${user._id}`, config);\n      setChats(response.data);\n      setLoadingChat(false);\n      onClose();\n    } catch (error) {\n      toast({\n        title: \"Error fetching the chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <Box\n        d=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        bg=\"white\"\n        w=\"100%\"\n        p=\"5px 10px 5px 10px\"\n        borderWidth=\"5px\"\n      >\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\n          <Button variant=\"ghost\" onClick={onOpen}>\n            <i className=\"fas fa-search\"></i>\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\n              Search User\n            </Text>\n          </Button>\n        </Tooltip>\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\n          Talk-A-Tive\n        </Text>\n        <div>\n          <Menu>\n            <MenuButton as={Button} bg=\"white\" rightIcon={<ChevronDownIcon />}>\n              <Avatar\n                size=\"sm\"\n                cursor=\"pointer\"\n                name={user.name}\n                src={user.pic}\n              />\n            </MenuButton>\n            <MenuList>\n              <ProfileModal user={user}>\n                <MenuItem>My Profile</MenuItem>{\" \"}\n              </ProfileModal>\n              <MenuDivider />\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\n            </MenuList>\n          </Menu>\n        </div>\n      </Box>\n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\n          <DrawerBody>\n            <Box d=\"flex\" pb={2}>\n              <Input\n                placeholder=\"Search by name or email\"\n                mr={2}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button onClick={handleSearch}>Go</Button>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => accessChat(user.id)}\n                />\n              ))\n            )}\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default SideDrawer;\n","import { Box } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport Chatbox from \"../components/Chatbox\";\nimport MyChats from \"../components/MyChats\";\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatpage = () => {\n  const [fetchAgain, setFetchAgain] = useState(false);\n  const { user } = ChatState();\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {user && <SideDrawer />}\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\n        {user && <MyChats fetchAgain={fetchAgain} />}\n        {user && (\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default Chatpage;\n","import \"./App.css\";\nimport Homepage from \"./Pages/Homepage\";\nimport { Route } from \"react-router-dom\";\nimport Chatpage from \"./Pages/Chatpage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route path=\"/\" component={Homepage} exact />\n      <Route path=\"/chats\" component={Chatpage} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport ChatProvider from \"./Context/ChatProvider\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <ChakraProvider>\n    <BrowserRouter>\n      <ChatProvider>\n        <App />\n      </ChatProvider>\n    </BrowserRouter>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}